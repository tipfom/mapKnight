<Window x:Class="mapKnight.ToolKit.Windows.Dialogs.EditBonesDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:l="clr-namespace:mapKnight.ToolKit"
        xmlns:data="clr-namespace:mapKnight.ToolKit.Data"
        Title="Bones" SizeToContent="Width" WindowStyle="ToolWindow" Height="300" Icon="{StaticResource ResourceKey=logo}" ResizeMode="CanResize" MinWidth="361" MaxWidth="361" ShowInTaskbar="False"
        Topmost="{Binding Source={x:Static Application.Current},Path=MainWindow.IsActive,Mode=OneWay}">
    <Window.CommandBindings>
        <CommandBinding Command="New" CanExecute="CommandNew_CanExecute" Executed="CommandNew_Executed"/>
        <CommandBinding Command="Delete" CanExecute="CommandDelete_CanExecute" Executed="CommandDelete_Executed"/>
        <CommandBinding x:Name="up_command" Command="l:CustomCommands.Up" CanExecute="CommandUp_CanExecute" Executed="CommandUp_Executed"/>
        <CommandBinding Command="l:CustomCommands.Down" CanExecute="CommandDown_CanExecute" Executed="CommandDown_Executed"/>
        <CommandBinding Command="l:CustomCommands.EditorR" CanExecute="CommandEditorR_CanExecute" Executed="CommandEditorR_Executed"/>
    </Window.CommandBindings>
    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <StackPanel DockPanel.Dock="Right" Width="40" Margin="5,0,0,0">
            <Button Height="40" Background="Transparent" Command="New" BorderThickness="0">
                <Image Source="{StaticResource ResourceKey=image_editbones_new}" Margin="-7" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
            </Button>
            <Button Height="40" Background="Transparent" Margin="0,5,0,0" Command="Delete" BorderThickness="0">
                <Image Source="{StaticResource ResourceKey=image_editbones_delete}" Margin="-7" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
            </Button>
            <Button Height="40" Background="Transparent" Margin="0,5,0,0" Command="l:CustomCommands.Up" BorderThickness="0">
                <Image Source="{StaticResource ResourceKey=image_editbones_up}" Margin="-7" RenderOptions.BitmapScalingMode="Linear"/>
            </Button>
            <Button Height="40" Background="Transparent" Margin="0,5,0,0" Command="l:CustomCommands.Down" BorderThickness="0">
                <Image Source="{StaticResource ResourceKey=image_editbones_down}" Margin="-7" RenderOptions.BitmapScalingMode="Linear"/>
            </Button>
            <Button Height="40" Background="Transparent" Margin="0,5,0,0" Command="l:CustomCommands.EditorR" BorderThickness="0">
                <Image Source="{StaticResource ResourceKey=image_editbones_resetsize}" Margin="-4" RenderOptions.BitmapScalingMode="Linear"/>
            </Button>
        </StackPanel>
        <ListBox DockPanel.Dock="Left" Width="300" x:Name="listbox_bones" BorderThickness="0">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Style.Resources>
                        <Style x:Key="FocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
                        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
                        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#cbe8f6"/>
                        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#26a0da"/>
                        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#cbe8f6"/>
                        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#26a0da"/>
                    </Style.Resources>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Padding" Value="4,1"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="data:VertexBone">
                    <StackPanel Orientation="Horizontal" Margin="0,3,0,3">
                        <Image Height="30" Width="30" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="{Binding BitmapImage}"/>
                        <Slider Width="220" Maximum="0.1" Minimum="0.001" Value="{Binding Scale}" TickFrequency="0.001" ValueChanged="Slider_ValueChanged" VerticalAlignment="Center" Margin="5,0,0,0"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </DockPanel>
</Window>
